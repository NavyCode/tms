{
  "x-generator": "NSwag v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "My Title",
    "version": "1.0.0"
  },
  "host": "127.0.0.1:5000",
  "schemes": [
    "http"
  ],
  "paths": {
    "/projects/{projectId}/plans": {
      "get": {
        "tags": [
          "Plans"
        ],
        "operationId": "Plans_GetPlans",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetPlansResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Plans"
        ],
        "operationId": "Plans_AddPlan",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdatePlanRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/projects/{projectId}/plans/{planId}": {
      "put": {
        "tags": [
          "Plans"
        ],
        "operationId": "Plans_UpdatePlan",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "planId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdatePlanRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Plans"
        ],
        "operationId": "Plans_DeletePlan",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "planId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/plans/{planId}/dublicate": {
      "post": {
        "tags": [
          "Plans"
        ],
        "operationId": "Plans_DublicatePlan",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "planId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/projects/{projectId}/plan/{planId}": {
      "get": {
        "tags": [
          "Plans"
        ],
        "operationId": "Plans_GetPlanInfo",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "planId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TestPlanItem"
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "operationId": "Projects_GetProjects",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetProjectsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "operationId": "Projects_AddProject",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateProjectRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/project/{projectId}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "operationId": "Projects_GetProjectInfo",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectItem"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Projects"
        ],
        "operationId": "Projects_UpdateProject",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateProjectRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}": {
      "delete": {
        "tags": [
          "Projects"
        ],
        "operationId": "Projects_DeleteProject",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestSuites"
        ],
        "operationId": "TestSuites_MoveSuite",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "moveSuiteRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoveSuiteRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/users/{id}": {
      "delete": {
        "tags": [
          "ProjectUsers"
        ],
        "operationId": "ProjectUsers_DeleteUser",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/users": {
      "get": {
        "tags": [
          "ProjectUsers"
        ],
        "operationId": "ProjectUsers_GetUsers",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetUsersResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProjectUsers"
        ],
        "operationId": "ProjectUsers_AddVirtualUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateVirtualUserRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/projects/{projectId}/users/{userId}/info": {
      "put": {
        "tags": [
          "ProjectUsers"
        ],
        "operationId": "ProjectUsers_UpdateVirtualUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "userId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateVirtualUserRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/users/exist": {
      "post": {
        "tags": [
          "ProjectUsers"
        ],
        "operationId": "ProjectUsers_AddExistUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateExistUserRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/projects/{projectId}/users/exist/{userId}": {
      "put": {
        "tags": [
          "ProjectUsers"
        ],
        "operationId": "ProjectUsers_UpdateExistUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "userId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateExistUserRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/tests/{testId}": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCases_GetTestCase",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "testId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTestCaseResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCases_UpdateTest",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "testId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateTestCaseRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCases_DeleteTest",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "testId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/tests/search": {
      "get": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCases_SearchTestCases",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "text",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SearchTestCaseItem"
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/tests": {
      "post": {
        "tags": [
          "TestCases"
        ],
        "operationId": "TestCases_AddTest",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateTestCaseRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_Login",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "string",
            "name": "login",
            "in": "query",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "pass",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/users/current/info": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_UserInfo",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoggedUserInfo"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_UpdateCurrentUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterOrUpdateUserRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_RegisterUser",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterOrUpdateUserRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/projects/{projectId}/files": {
      "post": {
        "tags": [
          "Files"
        ],
        "operationId": "Files_Upload",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "file",
            "name": "file",
            "in": "formData",
            "x-nullable": true
          },
          {
            "type": "string",
            "name": "tags",
            "in": "query",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/projects/{projectId}/files/{id}": {
      "get": {
        "tags": [
          "Files"
        ],
        "operationId": "Files_Download",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/{planId}/suites/tree": {
      "get": {
        "tags": [
          "Plan"
        ],
        "operationId": "Plan_GetSuitesTree",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "planId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetSuitesTreeResponse"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/configs": {
      "get": {
        "tags": [
          "TestConfigs"
        ],
        "operationId": "TestConfigs_GetConfigs",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetConfigsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestConfigs"
        ],
        "operationId": "TestConfigs_AddConfig",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateConfigsRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/configvars": {
      "get": {
        "tags": [
          "TestConfigs"
        ],
        "operationId": "TestConfigs_GetConfigsVars",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetConfigsVarsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestConfigs"
        ],
        "operationId": "TestConfigs_AddConfigVariable",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateConfigVarRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/configs/{configId}": {
      "put": {
        "tags": [
          "TestConfigs"
        ],
        "operationId": "TestConfigs_UpdateConfig",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "configId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateConfigsRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TestConfigs"
        ],
        "operationId": "TestConfigs_DeleteConfig",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "configId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/configvars/{id}": {
      "put": {
        "tags": [
          "TestConfigs"
        ],
        "operationId": "TestConfigs_UpdateConfigVariable",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateConfigVarRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TestConfigs"
        ],
        "operationId": "TestConfigs_DeleteConfigVariable",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/{planId}/suites/{suiteId}/points": {
      "get": {
        "tags": [
          "TestPoints"
        ],
        "operationId": "TestPoints_GetSuiteTestPoints",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "suiteId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "withCildrenSuites",
            "in": "query",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetSuiteTestPointsResponse"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/{planId}/testers": {
      "post": {
        "tags": [
          "TestPoints"
        ],
        "operationId": "TestPoints_SetTester",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetTesterRequest"
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/list/assignusers": {
      "post": {
        "tags": [
          "TestPoints"
        ],
        "operationId": "TestPoints_GetUserListForAssign",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserIdentity"
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/{planId}/suites/{suiteId}/tests/result": {
      "post": {
        "tags": [
          "TestPoints"
        ],
        "operationId": "TestPoints_SetOutcome",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetOutcomeRequest"
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "suiteId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/{planId}/suites/{suiteId}/tests/comment": {
      "post": {
        "tags": [
          "TestPoints"
        ],
        "operationId": "TestPoints_SetComment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetDescriptionRequest"
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "suiteId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/runs": {
      "post": {
        "tags": [
          "TestRuns"
        ],
        "operationId": "TestRuns_Add",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddRunRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/projects/{projectId}/runs/{runId}/results": {
      "post": {
        "tags": [
          "TestRuns"
        ],
        "operationId": "TestRuns_AddResult",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "runId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestResultRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "get": {
        "tags": [
          "TestRuns"
        ],
        "operationId": "TestRuns_GetResults",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "runId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestRunPoint"
              }
            }
          }
        }
      }
    },
    "/projects/{projectId}/runs/{runId}/results/{resultId}/files": {
      "post": {
        "tags": [
          "TestRuns"
        ],
        "operationId": "TestRuns_AddFiles",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "resultId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "ids",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "runId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/{planId}/suites/{suiteId}/tests": {
      "get": {
        "tags": [
          "TestSuite"
        ],
        "operationId": "TestSuite_GetSuiteTestCases",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "suiteId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "boolean",
            "name": "withCildren",
            "in": "query",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetSuiteTestCasesResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestSuite"
        ],
        "operationId": "TestSuite_AddTestCaseSuite",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "suiteId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddTestCaseToSuiteRequest"
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TestSuite"
        ],
        "operationId": "TestSuite_DeleteTestCaseFromSuite",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteTestCaseFromSuiteRequest"
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "suiteId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/{planId}/suites/{suiteId}/configs": {
      "get": {
        "tags": [
          "TestSuite"
        ],
        "operationId": "TestSuite_GetSuiteConfigs",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "suiteId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TestSuite"
        ],
        "operationId": "TestSuite_SetSuiteConfig",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "suiteId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetTestSuiteConfigRequest"
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/{planId}/suites/{suiteId}/tests/reorder": {
      "post": {
        "tags": [
          "TestSuite"
        ],
        "operationId": "TestSuite_ReorderTestCasess",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReorderTestCasesRequest"
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "suiteId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/{planId}/suites/{suiteId}/testconfigs": {
      "post": {
        "tags": [
          "TestSuite"
        ],
        "operationId": "TestSuite_SetTestCaseConfig",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetTestCaseConfigRequest"
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "suiteId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/list/configs": {
      "post": {
        "tags": [
          "TestSuite"
        ],
        "operationId": "TestSuite_GetConfigsForAssign",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetConfigsForAssignResponse"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/{planId}/suites/{suiteId}/children": {
      "get": {
        "tags": [
          "TestSuites"
        ],
        "operationId": "TestSuites_GetChildrenSuites",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "suiteId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetSuitesTreeResponse"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/{planId}/suites": {
      "post": {
        "tags": [
          "TestSuites"
        ],
        "operationId": "TestSuites_AddSuite",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "planId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateSuiteRequest"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/projects/{projectId}/test/plans/{planId}/suites/{suiteId}": {
      "put": {
        "tags": [
          "TestSuites"
        ],
        "operationId": "TestSuites_UpdateSuite",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "suiteId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddOrUpdateSuiteRequest"
            },
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TestSuites"
        ],
        "operationId": "TestSuites_DeleteSuite",
        "parameters": [
          {
            "type": "integer",
            "name": "projectId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "suiteId",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "string",
            "name": "planId",
            "in": "path",
            "required": true,
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GetPlansResponse": {
      "type": "object",
      "properties": {
        "plans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestPlanItem"
          }
        }
      }
    },
    "TestPlanItem": {
      "type": "object",
      "required": [
        "id",
        "state"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/PlanState"
        },
        "assignedTo": {
          "$ref": "#/definitions/UserIdentity"
        }
      }
    },
    "PlanState": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Planed",
        "Active",
        "Closed"
      ],
      "enum": [
        0,
        1,
        2
      ]
    },
    "UserIdentity": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "AddOrUpdatePlanRequest": {
      "type": "object",
      "required": [
        "state",
        "assignedTo"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/PlanState"
        },
        "assignedTo": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetProjectsResponse": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectItem"
          }
        }
      }
    },
    "ProjectItem": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "AddOrUpdateProjectRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "GetUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserItem"
          }
        }
      }
    },
    "UserItem": {
      "type": "object",
      "required": [
        "id",
        "role",
        "isVirtual"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "mail": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/UserRole"
        },
        "isVirtual": {
          "type": "boolean"
        },
        "identity": {
          "$ref": "#/definitions/UserIdentity"
        }
      }
    },
    "UserRole": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Guest",
        "Tester",
        "TestManager",
        "Owner",
        "Assessor"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4
      ]
    },
    "AddOrUpdateVirtualUserRequest": {
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "pass": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "mail": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/UserRole"
        }
      }
    },
    "AddOrUpdateExistUserRequest": {
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "mail": {
          "type": "string"
        },
        "role": {
          "$ref": "#/definitions/UserRole"
        }
      }
    },
    "GetTestCaseResponse": {
      "type": "object",
      "required": [
        "id",
        "priority",
        "state",
        "automationStatus"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "$ref": "#/definitions/WiState"
        },
        "assignedTo": {
          "$ref": "#/definitions/UserIdentity"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "automationStatus": {
          "$ref": "#/definitions/AutomationStatus"
        },
        "automationTestName": {
          "type": "string"
        },
        "automationTestStorage": {
          "type": "string"
        },
        "automationTestType": {
          "type": "string"
        },
        "precondition": {
          "type": "string"
        },
        "postcondition": {
          "type": "string"
        },
        "changeBy": {
          "$ref": "#/definitions/UserIdentity"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestStepInfo"
          }
        }
      }
    },
    "WiState": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Design",
        "Closed",
        "Ready"
      ],
      "enum": [
        0,
        1,
        2
      ]
    },
    "AutomationStatus": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Manual",
        "Automated"
      ],
      "enum": [
        0,
        1
      ]
    },
    "TestStepInfo": {
      "type": "object",
      "required": [
        "id",
        "order"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "SearchTestCaseItem": {
      "type": "object",
      "required": [
        "id",
        "priority"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AddOrUpdateTestCaseRequest": {
      "type": "object",
      "required": [
        "priority",
        "state",
        "assignedTo",
        "automationStatus"
      ],
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "$ref": "#/definitions/WiState"
        },
        "assignedTo": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "automationStatus": {
          "$ref": "#/definitions/AutomationStatus"
        },
        "automationTestName": {
          "type": "string"
        },
        "automationTestStorage": {
          "type": "string"
        },
        "automationTestType": {
          "type": "string"
        },
        "precondition": {
          "type": "string"
        },
        "postcondition": {
          "type": "string"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddOrUpdateTestStep"
          }
        }
      }
    },
    "AddOrUpdateTestStep": {
      "type": "object",
      "required": [
        "order"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "type": "string"
        },
        "result": {
          "type": "string"
        }
      }
    },
    "LoggedUserInfo": {
      "type": "object",
      "required": [
        "id",
        "isRoot"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "isRoot": {
          "type": "boolean"
        }
      }
    },
    "RegisterOrUpdateUserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "pass": {
          "type": "string"
        },
        "mail": {
          "type": "string"
        }
      }
    },
    "GetSuitesTreeResponse": {
      "type": "object",
      "properties": {
        "suites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SuitesTreeItem"
          }
        }
      }
    },
    "SuitesTreeItem": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetConfigsResponse": {
      "type": "object",
      "properties": {
        "configs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigItem"
          }
        }
      }
    },
    "ConfigItem": {
      "type": "object",
      "required": [
        "id",
        "isDefault"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigVariableItem"
          }
        }
      }
    },
    "ConfigVariableItem": {
      "type": "object",
      "required": [
        "id",
        "variableId",
        "valueId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "variableId": {
          "type": "integer",
          "format": "int32"
        },
        "valueId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetConfigsVarsResponse": {
      "type": "object",
      "properties": {
        "vars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigVarItem"
          }
        }
      }
    },
    "ConfigVarItem": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigVarValueItem"
          }
        }
      }
    },
    "ConfigVarValueItem": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "AddOrUpdateConfigsRequest": {
      "type": "object",
      "required": [
        "isDefault"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddOrUpdateConfigVariable"
          }
        }
      }
    },
    "AddOrUpdateConfigVariable": {
      "type": "object",
      "required": [
        "variableId",
        "valueId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "variableId": {
          "type": "integer",
          "format": "int32"
        },
        "valueId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AddOrUpdateConfigVarRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddOrUpdateConfigVarValue"
          }
        }
      }
    },
    "AddOrUpdateConfigVarValue": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "GetSuiteTestPointsResponse": {
      "type": "object",
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SuiteTestPointItem"
          }
        }
      }
    },
    "SuiteTestPointItem": {
      "type": "object",
      "required": [
        "id",
        "testSuiteId",
        "testConfigId",
        "testCaseId",
        "order",
        "priority",
        "outcome"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "testSuiteId": {
          "type": "integer",
          "format": "int32"
        },
        "testConfigId": {
          "type": "integer",
          "format": "int32"
        },
        "testCaseId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "outcome": {
          "$ref": "#/definitions/Outcome"
        },
        "configuration": {
          "type": "string"
        },
        "tester": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Outcome": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "Unknow",
        "Planed",
        "Passed",
        "Failed",
        "Blocked",
        "Skipped",
        "Paused"
      ],
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ]
    },
    "SetTesterRequest": {
      "type": "object",
      "required": [
        "testerId"
      ],
      "properties": {
        "testPointIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "testerId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SetOutcomeRequest": {
      "type": "object",
      "required": [
        "outcome"
      ],
      "properties": {
        "testPointIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "outcome": {
          "$ref": "#/definitions/Outcome"
        }
      }
    },
    "SetDescriptionRequest": {
      "type": "object",
      "properties": {
        "testPointIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AddRunRequest": {
      "type": "object",
      "required": [
        "isAutomated"
      ],
      "properties": {
        "isAutomated": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TestResultRequest": {
      "type": "object",
      "required": [
        "startedDate",
        "outCome",
        "completedDate"
      ],
      "properties": {
        "automatedTestId": {
          "type": "string"
        },
        "automatedTestName": {
          "type": "string"
        },
        "automatedTestStorage": {
          "type": "string"
        },
        "computerName": {
          "type": "string"
        },
        "startedDate": {
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "type": "string"
        },
        "outCome": {
          "$ref": "#/definitions/Outcome"
        },
        "stackTrace": {
          "type": "string"
        },
        "completedDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "TestRunPoint": {
      "type": "object",
      "required": [
        "id",
        "startedDate",
        "outCome",
        "completedDate"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "automatedTestId": {
          "type": "string"
        },
        "automatedTestName": {
          "type": "string"
        },
        "automatedTestStorage": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "computerName": {
          "type": "string"
        },
        "startedDate": {
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "type": "string"
        },
        "outCome": {
          "$ref": "#/definitions/Outcome"
        },
        "owner": {
          "$ref": "#/definitions/UserIdentity"
        },
        "stackTrace": {
          "type": "string"
        },
        "completedDate": {
          "type": "string",
          "format": "date-time"
        },
        "files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestPointFile"
          }
        }
      }
    },
    "TestPointFile": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "GetSuiteTestCasesResponse": {
      "type": "object",
      "properties": {
        "tests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SuiteTestCaseItem"
          }
        }
      }
    },
    "SuiteTestCaseItem": {
      "type": "object",
      "required": [
        "id",
        "testCaseId",
        "order",
        "state",
        "priority"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "testCaseId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "$ref": "#/definitions/WiState"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AddTestCaseToSuiteRequest": {
      "type": "object",
      "properties": {
        "testCasesIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "DeleteTestCaseFromSuiteRequest": {
      "type": "object",
      "properties": {
        "suiteTestCasesIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "ReorderTestCasesRequest": {
      "type": "object",
      "properties": {
        "suiteTestCaseOrderDictionary": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "SetTestCaseConfigRequest": {
      "type": "object",
      "properties": {
        "suiteTestCaseIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "testConfigIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "GetConfigsForAssignResponse": {
      "type": "object",
      "properties": {
        "configs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigsForAssign"
          }
        }
      }
    },
    "ConfigsForAssign": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "values": {
          "type": "string"
        }
      }
    },
    "SetTestSuiteConfigRequest": {
      "type": "object",
      "properties": {
        "testConfigIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "AddOrUpdateSuiteRequest": {
      "type": "object",
      "required": [
        "parentId"
      ],
      "properties": {
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "MoveSuiteRequest": {
      "type": "object",
      "required": [
        "newParentId"
      ],
      "properties": {
        "newParentId": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}